{"version":3,"sources":["_actions/types.js","components/Config.js","hoc/auth.js","_actions/user_actions.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/ChatPage/Sections/ChatCard.js","components/views/ChatPage/CreateGroupForm.js","components/views/ChatPage/Config.js","components/views/ChatPage/ChatPage.js","_actions/chat_actions.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/chat_reducer.js","index.js"],"names":["LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","GET_GROUP_CHATS","GET_CHATS","AFTER_POST_MESSAGE","USER_SERVER","CHAT_SERVER","hoc_auth","ComposedClass","reload","adminRoute","arguments","length","undefined","props","user","useSelector","state","dispatch","useDispatch","useEffect","request","axios","get","concat","then","response","data","type","payload","auth","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","isAuth","sent","history","push","isAdmin","stop","_x","apply","this","googleAuth","react_default","createElement","assign","LandingPage","Fragment","className","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","_useState","useState","_useState2","slicedToArray","formErrorMessage","setFormErrorMessage","_useState3","_useState4","rememberMe","setRememberMe","handleRememberMe","initialEmail","formik_esm","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","level","style","width","es_form","Item","input","prefix","icon","color","placeholder","value","onChange","onBlur","fontSize","border","padding","borderRadius","es_checkbox","checked","href","float","es_button","htmlType","minWidth","disabled","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","image","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","onClick","ChatCard","comment","author","sender","avatar","src","alt","content","message","substring","maxWidth","controls","datetime","tooltip","title","format","fromNow","CreateGroupForm","titleValue","React","useRef","descriptionValue","toggle","setToggle","htmlFor","ref","e","newGroup","current","description","console","log","options","method","body","JSON","stringify","headers","Content-type","fetch","json","ChatPage","_Component","inherits","_super","createSuper","_this","classCallCheck","call","handleSearchChange","setState","chatMessage","target","onDrop","files","userData","formData","FormData","append","Axios","header","content-type","url","userId","_id","userName","userImage","nowTime","socket","emit","submitChatMessage","preventDefault","groupId","chosengroup","groups","group","handleGroupChange","bind","assertThisInitialized","getGroupChat","res","info","createClass","key","event","_this2","getGroupChats","_this3","getChats","io","on","messageFromBackEnd","messagesEnd","scrollIntoView","behavior","_this4","chats","map","chat","Sections_ChatCard","mappedgroups","textAlign","setGroup","margin","height","overflowY","el","clear","row","layout","col","dist_es","getRootProps","getInputProps","Component","connect","Menu","SubMenu","ItemGroup","LeftMenu","menu","mode","status","NavBar","visible","setVisible","position","zIndex","Sections_LeftMenu","Sections_RightMenu","drawer","placement","closable","onClose","Footer","display","flexDirection","alignItems","justifyContent","App","react","fallback","NavBar_NavBar","paddingTop","minHeight","react_router","exact","path","component","Auth","LoginPage","Footer_Footer","Boolean","location","hostname","match","rootReducer","combineReducers","action","objectSpread2","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","es","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","react_router_dom","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8d1553d.chunk.js","sourcesContent":["export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\nexport const GET_GROUP_CHATS = 'get_group_chat';\nexport const GET_CHATS = 'get_chat';\nexport const AFTER_POST_MESSAGE = 'after_post_message';\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\nexport const CHAT_SERVER = '/api/chat';\n","import React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n\n            dispatch(auth()).then(async response => {\n                if (await !response.payload.isAuth) {\n                    if (reload) {\n                        props.history.push('/register_login')\n                    }\n                } else {\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    else {\n                        if (reload === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n            \n        }, [dispatch, props.history, user.googleAuth])\n\n        return (\n            <ComposedClass {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","import React from 'react'\nimport { FaCode } from \"react-icons/fa\";\n\nfunction LandingPage() {\n    return (\n        <>\n        <div className=\"app\">\n        </div>\n        </>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from \"react\";\nimport moment from 'moment';\nimport { Comment, Tooltip, Avatar } from 'antd';\n\nfunction ChatCard(props) {\n    return (\n        <div style={{ width: '100%' }}>\n            <Comment\n                author={props.sender.name}\n                avatar={\n                    <Avatar\n                        src={props.sender.image} alt={props.sender.name}\n                    />\n                }\n                content={\n                    props.message.substring(0, 8) === \"uploads/\" ?\n                        // this will be either video or image \n\n                        props.message.substring(props.message.length - 3, props.message.length) === 'mp4' ?\n                            <video\n                                style={{ maxWidth: '200px' }}\n                                src={`http://localhost:5000/${props.message}`} alt=\"video\"\n                                type=\"video/mp4\" controls\n                            />\n                            :\n                            <img\n                                style={{ maxWidth: '200px' }}\n                                src={`http://localhost:5000/${props.message}`}\n                                alt=\"img\"\n                            />\n                        :\n                        <p>\n                            {props.message}\n                        </p>\n                }\n                datetime={\n                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n                        <span>{moment().fromNow()}</span>\n                    </Tooltip>\n                }\n            />\n        </div>\n    )\n}\n\nexport default ChatCard;\n\n","import React, {useRef,useState} from 'react'\nimport { Button } from 'antd';\n\n\n\nexport default function CreateGroupForm() {\nconst titleValue = React.useRef('')\nconst descriptionValue = React.useRef('')\n\nconst [toggle, setToggle] = useState(false);\n\n\nfunction handleSubmit(e) {\n\n    const newGroup={\n      title: titleValue.current.value,\n      description:descriptionValue.current.value,\n    }\n    console.log(newGroup)\n    const options={\n        method: \"POST\",\n        body: JSON.stringify(newGroup),\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"}}\n\n      fetch(`api/chat/addgroup`, options)\n              .then(response => response.json()).then(json => console.log(json));\nsetToggle(!toggle)\n\n}\n\n\n\n\n\n\n  return (\n    <section className='section search'>\n    <h3>Create a Group</h3>\n    <div className=\"form-style-5\">\n      <form className='search-form'>\n        <div className='form-control'>\n        <label htmlFor='name'>Title</label>\n        <input\n          type='text'\n          name='titleValue'\n          id='titleValue'\n          ref={titleValue}\n\n        />\n        <label htmlFor='name'>Description</label>\n        <input\n          type='text'\n          name='descriptionValue'\n          id='descriptionValue'\n          ref={descriptionValue}\n\n        />\n\n        <Button type=\"primary\" style={{ width: '30%' }} onClick={handleSubmit} htmlType=\"submit\">\n        Submit Group\n        </Button>\n        </div>\n      </form>\n      </div>\n    </section>\n  )}\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\nexport const CHAT_SERVER = '/api/chat';\n","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Row, Col, } from 'antd';\nimport io from \"socket.io-client\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { getChats, getGroupChats, afterPostMessage } from \"../../../_actions/chat_actions\"\nimport ChatCard from \"./Sections/ChatCard\"\nimport Dropzone from 'react-dropzone';\nimport Axios from 'axios';\nimport CreateGroupForm from './CreateGroupForm'\nimport { CHAT_SERVER } from './Config.js';\n\n\nexport class ChatPage extends Component {\n\nconstructor(props){\n  super(props)\n  this.state = {\n      chatMessage: \"\",\n      groups:[],\n      chosengroup:'',\n      group:{},\n  }\n  this.handleGroupChange=this.handleGroupChange.bind(this)\n  this.getGroupChat=this.getGroupChat.bind(this)\n\n  fetch(`/api/chat/getGroups`).then(res => {\n          return res.json();\n        }).then(info=>{\n          console.log(\"groups\")\n          console.log(info)\n          this.setState({groups:info})\n        })\n}\n\nhandleGroupChange(event){\n  var group=event.target.value\n  this.setState({chosengroup: event.target.value });\n  console.log(CHAT_SERVER)\nthis.getGroupChat(event.target.value)\n\n}\n\ngetGroupChat(group){\n  fetch(`${CHAT_SERVER}/getChats/${group}`)\n      .then(response => response.json())\n      .then(data=>this.props.dispatch(getGroupChats(data)))\n}\n\n    componentDidMount() {\n        let server = \"http://localhost:5000\";\n\n        this.props.dispatch(getChats());\n\n        this.socket = io(server);\n\n\n        this.socket.on(\"Output Chat Message\", messageFromBackEnd => {\n            console.log(messageFromBackEnd)\n            this.props.dispatch(afterPostMessage(messageFromBackEnd));\n        })\n    }\n\n    componentDidUpdate() {\n        this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    handleSearchChange = (e) => {\n        this.setState({\n            chatMessage: e.target.value\n        })\n\n\n    }\n\n\n\n\n    onDrop = (files) => {\n        console.log(files)\n\n\n        if (this.props.user.userData && !this.props.user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n\n\n\n        let formData = new FormData;\n\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n\n        formData.append(\"file\", files[0])\n\n        Axios.post('api/chat/uploadfiles', formData, config)\n            .then(response => {\n                if (response.data.success) {\n                    let chatMessage = response.data.url;\n                    let userId = this.props.user.userData._id\n                    let userName = this.props.user.userData.name;\n                    let userImage = this.props.user.userData.image;\n                    let nowTime = moment();\n                    let type = \"VideoOrImage\"\n                    this.socket.emit(\"Input Chat Message\", {\n                        chatMessage,\n                        userId,\n                        userName,\n                        userImage,\n                        nowTime,\n                        type\n                    });\n                }\n            })\n    }\n\n\n\n\n    submitChatMessage = (e) => {\n        e.preventDefault();\n\n        if (this.props.user.userData && !this.props.user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n\n\n\n        let groupId=this.state.chosengroup\n        let chatMessage = this.state.chatMessage\n        let userId = this.props.user.userData._id\n        let userName = this.props.user.userData.name;\n        let userImage = this.props.user.userData.image;\n        let nowTime = moment();\n        let type = \"Text\"\n\n        this.socket.emit(\"Input Chat Message\", {\n            chatMessage,\n            userId,\n            userName,\n            groupId,\n            userImage,\n            nowTime,\n            type\n        });\n        this.setState({ chatMessage: \"\" })\n    }\n\n\n\n\n\n    render() {\n      var chats=  <p>No conversation so far.</p>\n\nif(this.props.chats.chats){\n  chats=this.props.chats.chats.map(chat =>{\n    return (\n      <ChatCard key={chat._id}  {...chat} />\n    )\n  })}\n\n\n      var mappedgroups=  <option value=\"no groups\">no groups</option>\n      if(this.state.groups){\n        mappedgroups=this.state.groups.map(group=>{\n          return(\n              <option key={group._id} value={group._id}>{group.title}</option>\n          )\n        })\n      }return (\n            <React.Fragment>\n                <div>\n                    <p style={{ fontSize: '2rem', textAlign: 'center' }}> Real Time Chat</p>\n                </div>\n<h2>Choose a Group</h2>\n<div className=\"form-style-5\">\n<form onSubmit={this.setGroup}>\n  <div className=\"form-control\">\n    <label htmlFor=\"room\">Room</label>\n    <select name=\"room\" id=\"room\" onChange={this.handleGroupChange}>\n      {mappedgroups}\n    </select>\n  </div>\n</form>\n</div>\n                <div style={{ maxWidth: '800px', margin: '0 auto' }}>\n                    <div className=\"infinite-container\" style={{ height: '500px', overflowY: 'scroll' }}>\n                        {chats}\n                        <div\n                            ref={el => {\n                                this.messagesEnd = el;\n                            }}\n                            style={{ float: \"left\", clear: \"both\" }}\n                        />\n                    </div>\n\n                    <Row >\n                        <Form layout=\"inline\" onSubmit={this.submitChatMessage}>\n                            <Col span={18}>\n                                <Input\n                                    id=\"message\"\n                                    prefix={<Icon type=\"message\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Let's start talking\"\n                                    type=\"text\"\n                                    value={this.state.chatMessage}\n                                    onChange={this.handleSearchChange}\n                                />\n                            </Col>\n                            <Col span={2}>\n                                <Dropzone onDrop={this.onDrop}>\n                                    {({ getRootProps, getInputProps }) => (\n                                        <section>\n                                            <div {...getRootProps()}>\n                                                <input {...getInputProps()} />\n                                                <Button>\n                                                    <Icon type=\"upload\" />\n                                                </Button>\n                                            </div>\n                                        </section>\n                                    )}\n                                </Dropzone>\n                            </Col>\n\n                            <Col span={4}>\n                                <Button type=\"primary\" style={{ width: '100%' }} onClick={this.submitChatMessage} htmlType=\"submit\">\n                                    <Icon type=\"enter\" />\n                                </Button>\n                            </Col>\n                        </Form>\n                    </Row>\n                </div>\n              <CreateGroupForm />\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        chats: state.chat\n    }\n}\n\n\nexport default connect(mapStateToProps)(ChatPage);\n","import axios from 'axios';\nimport {\n    GET_CHATS,\n    GET_GROUP_CHATS,\n    AFTER_POST_MESSAGE\n} from './types';\nimport { CHAT_SERVER } from '../components/Config.js';\n\nexport function getChats(){\n    const request = axios.get(`${CHAT_SERVER}/getChats`)\n        .then(response => response.data);\n\n    return {\n        type: GET_CHATS,\n        payload: request\n    }\n}\n\nexport function getGroupChats(data){\nreturn {\n            type: GET_GROUP_CHATS,\n            payload: data\n        }\n}\n\nexport function afterPostMessage(data){\n\n    return {\n        type: AFTER_POST_MESSAGE,\n        payload: data\n    }\n}\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n    <Menu.Item key=\"mail\">\n      <a href=\"/\">Home</a>\n    </Menu.Item>\n    <Menu.Item key=\"chat\">\n      <a href=\"/chat\">Chat</a>\n    </Menu.Item>\n    \n  </Menu>\n  )\n}\n\nexport default LeftMenu\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport ChatPage from \"./views/ChatPage/ChatPage\"\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div className=\"content_wrapper\" style={{ paddingTop: '75px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/chat\" component={Auth(ChatPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\nimport chat from './chat_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n    chat\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import {\n    GET_CHATS,\n    GET_GROUP_CHATS,\n    AFTER_POST_MESSAGE\n} from '../_actions/types';\n\nexport default function(state={},action){\n    switch(action.type){\n        case GET_CHATS:\n            return {...state, chats: action.payload }\n        case GET_GROUP_CHATS:\n        console.log(\"groupid in reducer\")\n        console.log(action.payload)\n            return {...state, chats: action.payload }\n        case AFTER_POST_MESSAGE:\n                return {...state, chats: state.chats.concat(action.payload) }\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}